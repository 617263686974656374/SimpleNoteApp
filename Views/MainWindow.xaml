<Window x:Class="Skuska.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Skuska.ViewModels"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="SimpleNoteApp" Height="650" Width="1000" Background="#FFB4BBDF">
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>

    <!-- Define button style -->
    <Window.Resources>
        <Style x:Key="RoundedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                        CornerRadius="10"
                        RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#005a9e" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#007ACC" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#003366"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#CCCCCC"/>
                                <Setter Property="Foreground" Value="#AAAAAA"/>
                                <Setter Property="Effect" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Define ListBox item style based on priority -->
        <Style x:Key="PriorityItemStyle" TargetType="ListBoxItem">
            <Style.Triggers>
                <!-- English Priority Levels -->
                <DataTrigger Binding="{Binding Priority}" Value="Low">
                    <Setter Property="Background" Value="#98FB98"/>
                    <!-- Svetlo zelená -->
                </DataTrigger>
                <DataTrigger Binding="{Binding Priority}" Value="Medium">
                    <Setter Property="Background" Value="#FFD700"/>
                    <!-- Zlatá -->
                </DataTrigger>
                <DataTrigger Binding="{Binding Priority}" Value="High">
                    <Setter Property="Background" Value="#FF6347"/>
                    <!-- Svetlo červená -->
                </DataTrigger>

                <!-- German Priority Levels -->
                <DataTrigger Binding="{Binding Priority}" Value="Niedrig">
                    <Setter Property="Background" Value="#98FB98"/>
                    <!-- Svetlo zelená -->
                </DataTrigger>
                <DataTrigger Binding="{Binding Priority}" Value="Mittel">
                    <Setter Property="Background" Value="#FFD700"/>
                    <!-- Zlatá -->
                </DataTrigger>
                <DataTrigger Binding="{Binding Priority}" Value="Hoch">
                    <Setter Property="Background" Value="#FF6347"/>
                    <!-- Svetlo červená -->
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <!-- Language toggle button style -->
        <Style x:Key="LanguageToggleButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                        CornerRadius="25"
                        RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#005a9e" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" To="1.05" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="1.05" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#007ACC" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#003366"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#CCCCCC"/>
                                <Setter Property="Foreground" Value="#AAAAAA"/>
                                <Setter Property="Effect" Value="{x:Null}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!-- Buttons -->
        <StackPanel Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Content="{DynamicResource LoadData}" Command="{Binding TaskViewModel.LoadDataCommand}" Style="{StaticResource RoundedButtonStyle}"/>
            <Button Content="{DynamicResource AddTask}" Command="{Binding TaskViewModel.AddTaskCommand}" Style="{StaticResource RoundedButtonStyle}"/>
            <Button Content="{DynamicResource UpdateTask}" Command="{Binding TaskViewModel.UpdateTaskCommand}" Style="{StaticResource RoundedButtonStyle}"/>
            <Button Content="{DynamicResource DeleteTask}" Command="{Binding TaskViewModel.DeleteTaskCommand}" Style="{StaticResource RoundedButtonStyle}"/>
            <Button Content="{DynamicResource SaveData}" Command="{Binding TaskViewModel.SaveDataCommand}" Style="{StaticResource RoundedButtonStyle}"/>
        </StackPanel>

        <!-- Language Toggle Button -->
        <Button Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5"
        Style="{StaticResource LanguageToggleButtonStyle}" Command="{Binding LanguageViewModel.ToggleLanguageCommand}"
        Content="{Binding LanguageViewModel.LanguageToggleButtonContent}"/>


        

        <!-- Task List -->
        <ListBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding TaskViewModel.TasksUsers}" SelectedItem="{Binding TaskViewModel.SelectedTask}" Margin="10" ItemContainerStyle="{StaticResource PriorityItemStyle}" Background="#FFE7E9E3">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="{DynamicResource TaskName}" FontWeight="Bold"/>
                        <TextBlock Text="{Binding TaskName}" Margin="0,0,0,10"/>
                        <TextBlock Text="{DynamicResource Description}" FontWeight="Bold"/>
                        <TextBlock Text="{Binding Description}" Margin="0,0,0,10"/>
                        <TextBlock Text="{DynamicResource Priority}" FontWeight="Bold"/>
                        <TextBlock Text="{Binding Priority}" Margin="0,0,0,10"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!-- Task Details -->
        <Grid Grid.Row="2" Grid.Column="0" Margin="10" DataContext="{Binding TaskViewModel}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Content="{DynamicResource TaskName}" Grid.Row="0" Grid.Column="0" Margin="5" FontWeight="Bold"/>
            <TextBox Text="{Binding NewTaskName, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="1" Margin="5"/>

            <Label Content="{DynamicResource Description}" Grid.Row="1" Grid.Column="0" Margin="5" FontWeight="Bold"/>
            <TextBox Text="{Binding NewDescription, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="1" Margin="5"/>

            <Label Content="{DynamicResource Priority}" Grid.Row="2" Grid.Column="0" Margin="5" FontWeight="Bold"/>
            <ComboBox SelectedValue="{Binding NewPriority, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Row="2" Grid.Column="1" Margin="5" SelectedValuePath="Content">
                <ComboBoxItem Content="{DynamicResource Low}"/>
                <ComboBoxItem Content="{DynamicResource Medium}"/>
                <ComboBoxItem Content="{DynamicResource High}"/>
            </ComboBox>

        </Grid>
    </Grid>
</Window>
